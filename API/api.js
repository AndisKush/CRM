(()=>{var o={347:(o,r,s)=>{const t=s(185).model("Anexo",{pid:String,anexos:Array});o.exports=t},621:(o,r,s)=>{const t=s(185).model("Cliente",{nome:String,cpf:String,telefone:String});o.exports=t},130:(o,r,s)=>{const t=s(185).model("Fluxograma",{nome:String,etapas:Array});o.exports=t},203:(o,r,s)=>{const t=s(185).model("Inversor",{modelo:String,fabricante:String,sistemamonitoramento:String,garantia:Number,tensao:Number,potencia:Number,foto:String});o.exports=t},826:(o,r,s)=>{const t=s(185).model("Kit",{nome:String,modulo:Object,quantidademodulos:Number,potenciacc:Number,inversor:Object,quantidadeinversores:Number,potenciainversor:Number,disjuntorminino:Object,descontomaximo:Number,custogerador:Number,geracaomedia:Array,precovenda:Array});o.exports=t},714:(o,r,s)=>{const t=s(185).model("Meta",{valor:Array,quantidade:Array});o.exports=t},294:(o,r,s)=>{const t=s(185).model("Modulo",{nome:String,modelo:String,potencia:Number,garantiafabrica:Number,garantiaeficiencia:Number,marca:String,peso:Number,foto:String});o.exports=t},473:(o,r,s)=>{const t=s(185).model("OrientacaoTelhado",{nome:String});o.exports=t},829:(o,r,s)=>{const t=s(185).model("PotenciaDisjuntor",{valor:Number});o.exports=t},969:(o,r,s)=>{const t=s(185).model("Produto",{nome:String});o.exports=t},214:(o,r,s)=>{const t=s(185).model("Proposta",{produto:Object,fluxo:Object,etapa:Object,cliente:Object,localinstalacao:Object,orientacaotelhado:Object,disjuntorcliente:Object,faturas:Array,mediaconsumo:Number,mediaconsumoabatida:Number,modulo:Object,kit:Object,valor:Number,data:Date,user:Object,origem:Object,finalizado:Object,negociacao:Object,valorprojeto:Number,datainstalacao:Date,quantidadepaineis:Number,dataagendamento:Date,atividades:Array,backlog:Array});o.exports=t},255:(o,r,s)=>{const t=s(185).model("TipoDisjuntor",{nome:String});o.exports=t},381:(o,r,s)=>{const t=s(185).model("Usuarios",{nome:String,email:String,password:String,ativo:Boolean,primeirologin:Boolean,supervisor:Boolean});o.exports=t},96:o=>{"use strict";o.exports=require("bcrypt")},582:o=>{"use strict";o.exports=require("cors")},142:o=>{"use strict";o.exports=require("dotenv")},860:o=>{"use strict";o.exports=require("express")},344:o=>{"use strict";o.exports=require("jsonwebtoken")},185:o=>{"use strict";o.exports=require("mongoose")}},r={};function s(t){var a=r[t];if(void 0!==a)return a.exports;var e=r[t]={exports:{}};return o[t](e,e.exports,s),e.exports}(()=>{s(142).config();const o=s(860),r=s(185),t=s(582),a=s(344),e=s(96),n=o();n.use(o.json({limit:"50mb"})),n.use(o.urlencoded({limit:"50mb",extended:!0})),n.use(t()),n.use(((o,r,s)=>{r.header("Access-Control-Allow-Origin","*"),r.header("Access-Control-Allow-Methods","GET, POST, PUT, DELETE"),r.header("Access-Control-Allow-Headers","Content-Type, Authorization"),s()}));const i=s(381),u=s(294),d=s(203),c=s(826),l=s(255),m=s(829),g=s(214),p=s(969),j=s(621),y=s(130),f=s(473),b=s(347),w=s(714);n.get("/",((o,r)=>{r.status(200).json({msg:"Bem vindo ao kushapi"})})),n.get("/usuarios",(async(o,r)=>{try{const o=await i.find().select("-password");return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/usuario",(async(o,r)=>{const{nome:s,email:t,password:a,confirmpassword:n,primeirologin:u,supervisor:d,ativo:c,_id:l}=o.body;if(!s)return r.status(422).json({msg:"O nome é obrigatorio"});if(!t)return r.status(422).json({msg:"O email é obrigatorio"});try{if(l)return(await i.updateOne({_id:l},{$set:{nome:s,email:t,ativo:c,supervisor:d,primeirologin:u}})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o módulo"});{if(!u&&!a)return r.status(422).json({msg:"A senha é obrigatória ou marque primeiro login para definir a senha no primeiro login"});if(!u&&!n)return r.status(422).json({msg:"A confirmação de senha é obrigatória ou marque Primeiro Login para definir a senha no primeiro login"});if(await i.findOne({email:t}))return r.status(422).json({msg:"Email já cadastrado utilize outro email"});var m=null;if(!u){if(a!==n)return r.status(422).json({msg:"Senhas não conferem"});const o=await e.genSalt(12);m=await e.hash(a,o)}const o=new i({nome:s,email:t,password:m||null,primeirologin:u,supervisor:d,ativo:c});await o.save(),r.status(200).json({msg:"Usuario criado com sucesso"})}}catch(o){console.log(o),r.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.post("/auth/primeirologin",(async(o,r)=>{const{email:s,password:t,confirmpassword:n}=o.body;if(!s)return r.status(422).json({msg:"O email é obrigatorio"});if(!t)return r.status(422).json({msg:"A senha é obrigatoria"});if(!n)return r.status(422).json({msg:"A senha é obrigatoria"});if(t!==n)return r.status(422).json({msg:"As senhas precisam ser iguais"});const u=await i.findOne({email:s});if(!u||!u.ativo)return r.status(422).json({msg:"Usuário não encontrado"});if(!u.primeirologin)return r.status(422).json({msg:"Solicite primeiro a alteração de senha"});const d=await e.genSalt(12),c=await e.hash(t,d);try{await i.findByIdAndUpdate(u._id,{password:c,primeirologin:!1}),await u.save()}catch(o){r.status(500).send(o)}try{const o=process.env.SECRET,s=a.sign({id:u._id},o);r.status(200).json({msg:"Logado com sucesso",token:s,id:u._id})}catch(o){console.log(o),r.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.post("/auth/login",(async(o,r)=>{const{email:s,password:t}=o.body;if(!s)return r.status(422).json({msg:"O email é obrigatorio"});if(!t)return r.status(422).json({msg:"A senha é obrigatoria"});const n=await i.findOne({email:s});if(!n)return r.status(404).json({msg:"Usuário não encontrado"});if(!n.ativo)return r.status(404).json({msg:"Usuário inativo"});if(n.primeirologin)return r.status(404).json({msg:"Usuário sem senha, marque a opção primeiro login para definir sua senha"});if(!await e.compare(t,n.password))return r.status(422).json({msg:"Senha inválida"});try{const o=process.env.SECRET,s=a.sign({id:n._id},o);r.status(200).json({msg:"Logado com sucesso",token:s,id:n._id})}catch(o){console.log(o),r.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.get("/user/:id",(function(o,r,s){const t=o.headers.authorization,e=t&&t.split(" ")[1];if(!e)return r.status(401).json({msg:"Acesso Negado"});try{const o=process.env.SECRET;a.verify(e,o),s()}catch(o){r.status(400).json({msg:"Token invalido"})}}),(async(o,r)=>{const s=o.params.id,t=await i.findById(s,"-password");return t?r.status(200).json({user:t}):r.status(404).json({msg:"Usuário não encontrado"})})),n.get("/modulos",(async(o,r)=>{try{const o=await u.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/modulo",(async(o,r)=>{try{const s=o.body;if(s._id)return(await u.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o módulo"});{const o=new u(s);return await o.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o módulo:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/inversores",(async(o,r)=>{try{const o=await d.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/inversor",(async(o,r)=>{try{const s=o.body;if(s._id)return(await d.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new d(s);return await o.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/kits",(async(o,r)=>{try{const o=await c.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/kit",(async(o,r)=>{try{const s=o.body;if(s._id)return(await c.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new c(s);return await o.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/tipodisjuntores",(async(o,r)=>{try{const o=await l.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/potenciadisjuntores",(async(o,r)=>{try{const o=await m.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/propostas",(async(o,r)=>{try{const o=await g.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/proposta",(async(o,r)=>{try{let s,t;if(o.body.dado2?(s=o.body.dado1,t=o.body.dado2):s=o.body,s._id)return(await g.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new g(s),a=await o.save(),e=new b({...t,pid:a._id});return await e.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/produtos",(async(o,r)=>{try{const o=await p.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/clientes",(async(o,r)=>{try{const o=await j.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/cliente",(async(o,r)=>{try{const s=o.body,t=await j.findOne({cpf:s.cpf});if(console.log(t),t&&(!s._id||t._id.toString()!==s._id))return r.status(400).json({msg:`CPF já está em uso para o cliente: ${t.nome}`});if(s._id)return(await j.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new j(s);return await o.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/fluxogramas",(async(o,r)=>{try{const o=await y.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/mensagem",(async(o,r)=>{try{const s=o.body.fluxo,t=o.body.etapa,a=[...(await y.find({id:s.id}))[0].etapas];return a[t.index]=t,(await y.updateOne({_id:s._id},{$set:{etapas:a}})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar a mensagem"})}catch(o){return console.error("Erro ao inserir ou atualizar a mensagem:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/orientacaotelhados",(async(o,r)=>{try{const o=await f.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/anexos",(async(o,r)=>{try{const s=o.body,t=await b.findOne({pid:s._id});return r.status(200).json({resultado:t})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/anexo",(async(o,r)=>{try{const s=o.body;if(s._id)return(await b.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new b(s);return await o.save(),r.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasfluxo",(async(o,r)=>{const s=o.body;try{const o=new Date(s.datainicial);o.setHours(0,0,0,0);const t=new Date(s.datafinal);t.setHours(23,59,59,999);const a=await g.find({$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{user:s.usuario},{data:{$gte:o,$lte:t}}]}),e={};return a.forEach((o=>{const r=o.fluxo.nome;e[r]||(e[r]=[]),e[r].push(o)})),r.status(200).json({resultado:e})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasmes",(async(o,r)=>{const s=o.body;try{const o=Array(12).fill(0),t=(new Date).getFullYear();return(await g.find({$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{data:{$gte:new Date(t,0,1),$lte:new Date(t,11,31)}},{user:s.usuario}]})).forEach((r=>{const s=new Date(r.data).getMonth();o[s]+=r.valor})),r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasmesquantidade",(async(o,r)=>{const s=o.body;try{const o=Array(12).fill(0),t=(new Date).getFullYear();return(await g.find({$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{data:{$gte:new Date(t,0,1),$lte:new Date(t,11,31)}},{user:s.usuario}]})).forEach((r=>{const s=new Date(r.data).getMonth();o[s]+=1})),r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasprodutovalor",(async(o,r)=>{const s=o.body;try{const o=new Date(s.datainicial);o.setHours(0,0,0,0);const t=new Date(s.datafinal);t.setHours(23,59,59,999);const a=await g.aggregate([{$match:{$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{user:s.usuario},{data:{$gte:o,$lte:t}}]}},{$group:{_id:"$produto.nome",totalValor:{$sum:"$valor"}}},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]);return r.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasprodutoquantidade",(async(o,r)=>{const s=o.body;try{const o=new Date(s.datainicial);o.setHours(0,0,0,0);const t=new Date(s.datafinal);t.setHours(23,59,59,999);const a=await g.aggregate([{$match:{$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{user:s.usuario},{data:{$gte:o,$lte:t}}]}},{$group:{_id:"$produto.nome",quantidade:{$sum:1}}},{$project:{_id:0,label:"$_id",value:"$quantidade"}}]);return r.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostastop10cidades",(async(o,r)=>{const s=o.body;try{const o=new Date(s.datainicial);o.setHours(0,0,0,0);const t=new Date(s.datafinal);t.setHours(23,59,59,999);const a=await g.aggregate([{$match:{$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{user:s.usuario},{data:{$gte:o,$lte:t}}]}},{$group:{_id:"$localinstalacao.cidade.nome",totalValor:{$sum:"$valor"}}},{$sort:{totalValor:-1}},{$limit:10},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]);return r.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostasestados",(async(o,r)=>{const s=o.body;try{const o=new Date(s.datainicial);o.setHours(0,0,0,0);const t=new Date(s.datafinal);t.setHours(23,59,59,999);const a=await g.aggregate([{$match:{$and:[{$or:[{"finalizado.nome":{$ne:"Rejeitado"}},{"finalizado.nome":{$exists:!1}}]},{user:s.usuario},{data:{$gte:o,$lte:t}}]}},{$group:{_id:"$localinstalacao.estado.sigla",totalValor:{$sum:"$valor"}}},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]);return r.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.get("/metas",(async(o,r)=>{try{const o=await w.find();return r.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),r.status(500).json({error:"Erro interno do servidor"})}})),n.post("/meta",(async(o,r)=>{try{const s=o.body;return(await w.updateOne({_id:s._id},{$set:s})).acknowledged?r.status(200).json({msg:"Registro atualizado com sucesso"}):r.status(500).json({msg:"Erro ao atualizar o registro"})}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),r.status(500).json({error:"Erro interno do servidor"})}})),r.connect("mongodb://127.0.0.1:27017/arasol").then((()=>{console.log("BANCO OK"),n.listen(5001),console.log("API ONLINE")})).catch((o=>console.log(o)))})()})();