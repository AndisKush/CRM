(()=>{var o={347:(o,t,s)=>{const a=s(185).model("Anexo",{pid:String,anexos:Array});o.exports=a},621:(o,t,s)=>{const a=s(185).model("Cliente",{nome:String,cpf:String,telefone:String,ativo:Boolean});o.exports=a},130:(o,t,s)=>{const a=s(185).model("Fluxograma",{nome:String,etapas:Array});o.exports=a},203:(o,t,s)=>{const a=s(185).model("Inversor",{modelo:String,fabricante:String,sistemamonitoramento:String,garantia:Number,tensao:Number,potencia:Number,foto:String,ativo:Boolean});o.exports=a},826:(o,t,s)=>{const a=s(185).model("Kit",{nome:String,modulo:Object,quantidademodulos:Number,potenciacc:Number,inversor:Object,quantidadeinversores:Number,potenciainversor:Number,disjuntorminino:Object,descontomaximo:Number,custogerador:Number,geracaomedia:Array,precovenda:Array,ativo:Boolean});o.exports=a},714:(o,t,s)=>{const a=s(185).model("Meta",{metas:Object,usuario:Object,produto:Object});o.exports=a},294:(o,t,s)=>{const a=s(185).model("Modulo",{nome:String,modelo:String,potencia:Number,garantiafabrica:Number,garantiaeficiencia:Number,marca:String,peso:Number,foto:String,ativo:Boolean});o.exports=a},473:(o,t,s)=>{const a=s(185).model("OrientacaoTelhado",{nome:String});o.exports=a},829:(o,t,s)=>{const a=s(185).model("PotenciaDisjuntor",{valor:Number});o.exports=a},969:(o,t,s)=>{const a=s(185).model("Produto",{nome:String});o.exports=a},214:(o,t,s)=>{const a=s(185).model("Proposta",{produto:Object,fluxo:Object,etapa:Object,cliente:Object,localinstalacao:Object,orientacaotelhado:Object,disjuntorcliente:Object,faturas:Array,mediaconsumo:Number,mediaconsumoabatida:Number,modulo:Object,kit:Object,valorkit:Number,desconto:Number,acrescimo:Number,valor:Number,data:Date,user:Object,origem:Object,finalizado:Object,negociacao:Object,responsavel:Object,obs:String,valorprojeto:Number,datainstalacao:Date,quantidadepaineis:Number,dataagendamento:Date,atividades:Array,backlog:Array});o.exports=a},255:(o,t,s)=>{const a=s(185).model("TipoDisjuntor",{nome:String,id:Number});o.exports=a},381:(o,t,s)=>{const a=s(185).model("Usuarios",{nome:String,telefone:String,email:String,password:String,ativo:Boolean,primeirologin:Boolean,supervisor:Boolean});o.exports=a},96:o=>{"use strict";o.exports=require("bcrypt")},582:o=>{"use strict";o.exports=require("cors")},142:o=>{"use strict";o.exports=require("dotenv")},860:o=>{"use strict";o.exports=require("express")},344:o=>{"use strict";o.exports=require("jsonwebtoken")},185:o=>{"use strict";o.exports=require("mongoose")}},t={};function s(a){var r=t[a];if(void 0!==r)return r.exports;var e=t[a]={exports:{}};return o[a](e,e.exports,s),e.exports}(()=>{s(142).config();const o=s(860),t=s(185),a=s(582),r=s(344),e=s(96),n=o();n.use(o.json({limit:"50mb"})),n.use(o.urlencoded({limit:"50mb",extended:!0})),n.use(a()),n.use(((o,t,s)=>{t.header("Access-Control-Allow-Origin","*"),t.header("Access-Control-Allow-Methods","GET, POST, PUT, DELETE"),t.header("Access-Control-Allow-Headers","Content-Type, Authorization"),s()}));const i=s(381),d=s(294),u=s(203),c=s(826),l=s(255),m=s(829),g=s(214),p=s(969),j=s(621),f=s(130),v=s(473),w=s(347),b=s(714);function y(o,t,s){const a=o.headers.authorization,e=a&&a.split(" ")[1];if(!e)return t.status(401).json({msg:"Acesso Negado"});try{const o=process.env.SECRET;r.verify(e,o),s()}catch(o){t.status(400).json({msg:"Sessão Expirada - Faça o Login Novamente"})}}n.get("/",((o,t)=>{t.status(200).json({msg:"Bem vindo ao kushapi"})})),n.get("/usuarios",(async(o,t)=>{try{const o=await i.find().select("-password");return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/usuario",(async(o,t)=>{const{nome:s,telefone:a,email:r,password:n,confirmpassword:d,primeirologin:u,supervisor:c,ativo:l,_id:m}=o.body;if(!s)return t.status(422).json({msg:"O nome é obrigatorio"});if(!r)return t.status(422).json({msg:"O email é obrigatorio"});try{if(m){const o=await i.findOne({email:r});return o&&o._id.toString()!==m?t.status(422).json({msg:"Email já cadastrado utilize outro email"}):(await i.updateOne({_id:m},{$set:{nome:s,telefone:a,email:r,ativo:l,supervisor:c,primeirologin:u}})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o módulo"})}{if(!u&&!n)return t.status(422).json({msg:"A senha é obrigatória ou marque primeiro login para definir a senha no primeiro login"});if(!u&&!d)return t.status(422).json({msg:"A confirmação de senha é obrigatória ou marque Primeiro Login para definir a senha no primeiro login"});if(await i.findOne({email:r}))return t.status(422).json({msg:"Email já cadastrado utilize outro email"});var g=null;if(!u){if(n!==d)return t.status(422).json({msg:"Senhas não conferem"});const o=await e.genSalt(12);g=await e.hash(n,o)}const o=new i({nome:s,telefone:a,email:r,password:g||null,primeirologin:u,supervisor:c,ativo:l});await o.save(),t.status(200).json({msg:"Usuario criado com sucesso"})}}catch(o){console.log(o),t.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.post("/auth/primeirologin",(async(o,t)=>{const{email:s,password:a,confirmpassword:n}=o.body;if(!s)return t.status(422).json({msg:"O email é obrigatorio"});if(!a)return t.status(422).json({msg:"A senha é obrigatoria"});if(!n)return t.status(422).json({msg:"A senha é obrigatoria"});if(a!==n)return t.status(422).json({msg:"As senhas precisam ser iguais"});const d=await i.findOne({email:s});if(!d||!d.ativo)return t.status(422).json({msg:"Usuário não encontrado"});if(!d.primeirologin)return t.status(422).json({msg:"Solicite primeiro a alteração de senha"});const u=await e.genSalt(12),c=await e.hash(a,u);try{await i.findByIdAndUpdate(d._id,{password:c,primeirologin:!1}),await d.save()}catch(o){t.status(500).send(o)}try{const o=process.env.SECRET,s=604800,a=r.sign({id:d._id},o,{expiresIn:s});t.status(200).json({msg:"Logado com sucesso",token:a,id:d._id})}catch(o){console.log(o),t.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.post("/auth/login",(async(o,t)=>{const{email:s,password:a}=o.body;if(!s)return t.status(422).json({msg:"O email é obrigatorio"});if(!a)return t.status(422).json({msg:"A senha é obrigatoria"});const n=await i.findOne({email:s});if(!n)return t.status(404).json({msg:"Usuário não encontrado"});if(!n.ativo)return t.status(404).json({msg:"Usuário inativo"});if(n.primeirologin)return t.status(404).json({msg:"Usuário sem senha, marque a opção primeiro login para definir sua senha"});if(!await e.compare(a,n.password))return t.status(422).json({msg:"Senha inválida"});try{const o=process.env.SECRET,s=604800,a=r.sign({id:n._id},o,{expiresIn:s});t.status(200).json({msg:"Logado com sucesso",token:a,id:n._id})}catch(o){console.log(o),t.status(500).json({msg:"Aconteceu um erro no servidor"})}})),n.get("/user/:id",y,(async(o,t)=>{const s=o.params.id,a=await i.findById(s,"-password");return a?t.status(200).json({user:a}):t.status(404).json({msg:"Usuário não encontrado"})})),n.post("/validateuser",y,(async(o,t)=>{const s=o.body,a=await i.findById(s._id,"-password");return a?a.ativo?a.email!==s.email?t.status(400).json({msg:"Usuário não encontrado"}):t.status(200).json({usuario:a}):t.status(400).json({msg:"Usuário não encontrado"}):t.status(404).json({msg:"Usuário não encontrado"})})),n.post("/modulos",(async(o,t)=>{const s=o.body,a={ativo:!0};s.ativo&&s.ativo.length>1&&(a.ativo={$in:s.ativo.map((o=>o))});try{const o=await d.find(a);return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/modulo",(async(o,t)=>{try{const s=o.body;if(s._id)return(await d.updateOne({_id:s._id},{$set:s})).acknowledged?(await c.updateMany({"modulo._id":s._id},{$set:{modulo:s}}),t.status(200).json({msg:"Registro atualizado com sucesso"})):t.status(500).json({msg:"Erro ao atualizar o módulo"});{const o=new d(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o módulo:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/unomodulo",(async(o,t)=>{const s=o.body,a={};s._id&&(a._id=s._id);try{const o=await d.findOne(a);return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/inversores",(async(o,t)=>{const s=o.body,a={ativo:!0};s.ativo&&s.ativo.length>1&&(a.ativo={$in:s.ativo.map((o=>o))});try{const o=await u.find(a);return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/inversor",(async(o,t)=>{try{const s=o.body;if(s._id)return(await u.updateOne({_id:s._id},{$set:s})).acknowledged?(await c.updateMany({"inversor._id":s._id},{$set:{inversor:s}}),t.status(200).json({msg:"Registro atualizado com sucesso"})):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new u(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/kits",(async(o,t)=>{const s=o.body,a={ativo:!0};s.ativo&&s.ativo.length>1&&(a.ativo={$in:s.ativo.map((o=>o))});try{const o=await c.find(a).select("-modulo.foto");return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/kit",(async(o,t)=>{try{const s=o.body;if(s._id)return(await c.updateOne({_id:s._id},{$set:s})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new c(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.get("/tipodisjuntores",(async(o,t)=>{try{const o=await l.find();return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.get("/potenciadisjuntores",(async(o,t)=>{try{const o=await m.find().sort({valor:1});return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/propostas",(async(o,t)=>{const s=o.body;try{let o={};if(s.usuario&&s.usuario._id&&(o["user._id"]=s.usuario._id),s.datainicial&&s.datafinal){const t=new Date(s.datainicial);t.setHours(0,0,0,0);const a=new Date(s.datafinal);a.setHours(23,59,59,999),o.data={$gte:t,$lte:a}}s.cliente&&s.cliente._id&&(o["cliente._id"]=s.cliente._id),s.estado&&s.estado.id&&(o["localinstalacao.estado.id"]=s.estado.id),s.cidade&&s.cidade.id&&(o["localinstalacao.cidade.id"]=s.cidade.id),s.status&&s.status.nome&&(o["finalizado.nome"]=s.status.nome),s.fluxo&&s.fluxo._id&&(o["fluxo.id"]=s.fluxo.id),s.etapa&&s.etapa.id&&(o["etapa.id"]=s.etapa.id),s.responsavel&&s.responsavel._id&&(o["responsavel._id"]=s.responsavel._id);const a=await g.find(o);return t.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/lightpropostas",(async(o,t)=>{const s=o.body;try{let o={};if(s.usuario&&s.usuario._id&&(o["user._id"]=s.usuario._id),s.datainicial&&s.datafinal){const t=new Date(s.datainicial);t.setHours(0,0,0,0);const a=new Date(s.datafinal);a.setHours(23,59,59,999),o.data={$gte:t,$lte:a}}s.cliente&&s.cliente._id&&(o["cliente._id"]=s.cliente._id),s.estado&&s.estado.id&&(o["localinstalacao.estado.id"]=s.estado.id),s.cidade&&s.cidade.id&&(o["localinstalacao.cidade.id"]=s.cidade.id),s.status&&s.status.nome&&(o["finalizado.nome"]=s.status.nome),s.fluxo&&s.fluxo._id&&(o["fluxo.id"]=s.fluxo.id),s.etapa&&s.etapa.id&&(o["etapa.id"]=s.etapa.id),s.responsavel&&s.responsavel._id&&(o["responsavel._id"]=s.responsavel._id);const a=await g.find(o).select("_id cliente produto data valor fluxo etapa");return t.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar propostas:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/proposta",(async(o,t)=>{try{let s,a;if(o.body.dado2?(s=o.body.dado1,a=o.body.dado2):s=o.body,s._id)return(await g.updateOne({_id:s._id},{$set:s})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new g(s),r=await o.save(),e=new w({...a,pid:r._id});return await e.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/unoproposta",(async(o,t)=>{const s=o.body,a={};s._id&&(a._id=s._id);try{const o=await g.findOne(a);return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.get("/produtos",(async(o,t)=>{try{const o=await p.find();return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/clientes",(async(o,t)=>{const s=o.body,a={ativo:!0};s.ativo&&s.ativo.length>1&&(a.ativo={$in:s.ativo.map((o=>o))});try{const o=await j.find(a).sort({nome:1});return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/cliente",(async(o,t)=>{try{const s=o.body,a=await j.findOne({cpf:s.cpf});if(a&&(!s._id||a._id.toString()!==s._id))return t.status(400).json({msg:`CPF já está em uso para o cliente: ${a.nome}`});if(s._id)return(await j.updateOne({_id:s._id},{$set:s})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new j(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.get("/fluxogramas",(async(o,t)=>{try{const o=await f.find();return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/mensagem",(async(o,t)=>{try{const s=o.body.fluxo,a=o.body.etapa,r=[...(await f.find({id:s.id}))[0].etapas];return r[a.index]=a,(await f.updateOne({_id:s._id},{$set:{etapas:r}})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar a mensagem"})}catch(o){return console.error("Erro ao inserir ou atualizar a mensagem:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.get("/orientacaotelhados",(async(o,t)=>{try{const o=await v.find();return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/anexos",(async(o,t)=>{try{const s=o.body,a=await w.findOne({pid:s._id});return t.status(200).json({resultado:a})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/anexo",(async(o,t)=>{try{const s=o.body;if(s._id)return(await w.updateOne({_id:s._id},{$set:s})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new w(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/metas",(async(o,t)=>{const s=o.body;if(s.usuario&&s.produto)try{const o=await b.findOne({"usuario._id":s.usuario._id,"produto._id":s.produto._id});return t.status(200).json({resultado:o})}catch(o){return console.error("Erro ao buscar módulos:",o),t.status(500).json({error:"Erro interno do servidor"})}return t.status(404).json({error:"Informe os filtros"})})),n.post("/meta",(async(o,t)=>{try{const s=o.body,a=await b.findOne({"usuario._id":s.usuario._id,"produto._id":s.produto._id});if(a)return(await b.updateOne({_id:a._id},{$set:s})).acknowledged?t.status(200).json({msg:"Registro atualizado com sucesso"}):t.status(500).json({msg:"Erro ao atualizar o registro"});{const o=new b(s);return await o.save(),t.status(200).json({msg:"Registro inserido com sucesso"})}}catch(o){return console.error("Erro ao inserir ou atualizar o registro:",o),t.status(500).json({error:"Erro interno do servidor"})}})),n.post("/dadoshome",(async(o,t)=>{const s=o.body,a=new Date(s.datainicial);a.setHours(0,0,0,0);const r=new Date(s.datafinal);r.setHours(23,59,59,999);const e={},n={};n.data={$gte:a,$lte:r},n["finalizado.nome"]={$ne:"Rejeitado"},s.usuarios&&s.usuarios.length>0&&(n["user._id"]={$in:s.usuarios.map((o=>o._id))}),s.cliente&&s.cliente._id&&(n["cliente._id"]=s.cliente._id),s.estado&&s.estado.id&&(n["localinstalacao.estado.id"]=s.estado.id),s.cidade&&s.cidade.id&&(n["localinstalacao.cidade.id"]=s.cidade.id),s.produtos&&s.produtos.length>0&&(n["produto._id"]={$in:s.produtos.map((o=>o._id))});const i={...n},d={...n};d.backlog={$elemMatch:{etapas:{$elemMatch:{nome:{$in:["Assinar Contrato","Fechamento"]}}}}};const u={...d},c=(new Date).getFullYear();u.data={$gte:new Date(c,0,1),$lte:new Date(c,11,31)};const l={};n["user._id"]&&(l["usuario._id"]=n["user._id"]),n["produto._id"]&&(l["produto._id"]=n["produto._id"]);const m={...n};m["finalizado.nome"]={$in:["Aprovado","Finalizado"]};const p={...m};p.data={$gte:new Date(c,0,1),$lte:new Date(c,11,31)};const j={...n};j["finalizado.nome"]={$in:["Rejeitado"]};const f=await g.find(i),v=await g.find(d),w=await g.find(u),y=await g.find(m),_=await g.find(p),h=await g.find(j),E={};f.forEach((o=>{const t=o.fluxo.nome;E[t]||(E[t]=0),E[t]+=1}));const $=Array(12).fill(0);w.forEach((o=>{const t=new Date(o.data).getMonth();$[t]+=o.valor}));const x=await b.find(l),O=Array(12).fill(0);x.forEach((o=>{o.metas.valor.map(((o,t)=>{O[t]+=o}))}));const z=await g.aggregate([{$match:d},{$group:{_id:"$produto.nome",totalValor:{$sum:"$valor"}}},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]),A=Array(12).fill(0);_.forEach((o=>{const t=new Date(o.data).getMonth();A[t]+=1}));const S=await b.find(l),N=Array(12).fill(0);S.forEach((o=>{o.metas.quantidade.map(((o,t)=>{N[t]+=o}))}));const k=await g.aggregate([{$match:m},{$group:{_id:"$produto.nome",quantidade:{$sum:1}}},{$project:{_id:0,label:"$_id",value:"$quantidade"}}]),R=await g.aggregate([{$match:d},{$group:{_id:"$localinstalacao.cidade.nome",totalValor:{$sum:"$valor"}}},{$sort:{totalValor:-1}},{$limit:10},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]),D=await g.aggregate([{$match:d},{$group:{_id:"$localinstalacao.estado.sigla",totalValor:{$sum:"$valor"}}},{$project:{_id:0,label:"$_id",value:"$totalValor"}}]);return e.propostasFluxo=E,e.propostasMes=$,e.metasValor=O,e.propostasProdutoValor=z,e.propostaMesQuantidade=A,e.metasQuantidade=N,e.propostasProdutoQuantidade=k,e.top10cidades=R,e.propostasEstados=D,e.numeroVendas=v.length,e.totalVendasValor=v.reduce(((o,t)=>o+t.valor),0),e.totalVendasKwp=v.reduce(((o,t)=>o+(t.kit?.potenciacc||0)),0),e.ticketMedioValor=parseFloat((e.totalVendasValor/e.numeroVendas).toFixed(2)),e.ticketMedioKwp=parseFloat((e.totalVendasKwp/e.numeroVendas).toFixed(2)),e.taxaConversao=parseFloat((v.length/y.length*100).toFixed(2)),e.propostasRejeitadas=h.length,t.status(200).json({resultado:e})})),n.post("/ajustedb",(async(o,t)=>{await u.updateMany({},{$set:{ativo:!0}}),j.updateMany({},{$set:{ativo:!0}}).then((o=>t.status(200).json({result:o}))).catch((o=>{console.error("Erro ao atualizar documentos:",o)}))})),t.connect("mongodb://127.0.0.1:27017/arasol").then((()=>{console.log("BANCO OK"),n.listen(5001),console.log("API ONLINE")})).catch((o=>console.log(o)))})()})();